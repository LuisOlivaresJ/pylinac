image:
   name: us-central1-docker.pkg.dev/radmachine/pylinac/base-pipe-image:latest
   username: _json_key
   password: '$GCR_JSON_KEY'


definitions:
  steps:
    - step: &push-to-github
        name: Push to Github
        clone:
          depth: full
        script:
          - git push git@github.com:jrkerns/pylinac.git $BITBUCKET_BRANCH
    - step: &cbct-tests
        name: Run CBCT Tests
        script:
          - pytest tests_basic/test_cbct.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_cbct.py"
              - "pylinac/ct.py"
    - step: &acr-tests
        name: Run ACR CT/MRI Tests
        script:
          - pip install -r requirements-ram.txt
          - pip freeze
          - pytest tests_basic/test_acr.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_acr.py"
              - "pylinac/ct.py"
              - "pylinac/acr.py"
    - step: &planar-tests
        name: Run Planar Imaging Tests
        script:
          - pytest tests_basic/test_planar_imaging.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_planar_imaging.py"
              - "pylinac/planar_imaging.py"
    - step: &dlg-tests
        name: Run DLG Tests
        script:
          - pytest tests_basic/test_dlg.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_dlg.py"
              - "pylinac/dlg.py"
    - step: &field-analysis-tests
        name: Run Field Analysis Tests
        script:
          - pytest tests_basic/test_field_analysis.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_field_analysis.py"
              - "pylinac/field_analysis.py"
    - step: &machine-log-tests
        name: Run Machine Logs Tests
        script:
          - pytest tests_basic/test_logs.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_lost.py"
              - "pylinac/log_analyzer.py"
    - step: &picket-fence-tests
        name: Run Picket Fence Tests
        script:
          - pytest tests_basic/test_picketfence.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_picketfence.py"
              - "pylinac/picketfence.py"
    - step: &starshot-tests
        name: Run Starshot Tests
        script:
          - pytest tests_basic/test_starshot.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_starshot.py"
              - "pylinac/starshot.py"
    - step: &calibration-tests
        name: Run TG-51/TRS-398 Tests
        script:
          - pytest tests_basic/test_tg51.py tests_basic/test_trs398.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_tg51.py"
              - "tests_basic/test_trs398.py"
              - "pylinac/vmat.py"
    - step: &vmat-tests
        name: Run VMAT Tests
        script:
          - pytest tests_basic/test_vmat.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_vmat.py"
              - "pylinac/vmat.py"
    - step: &winston-lutz-tests
        name: Run Winston-Lutz Tests
        script:
          - pytest tests_basic/test_winstonlutz.py
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_winstonlutz.py"
              - "pylinac/winston_lutz.py"
    - step: &core-module-tests
        name: Run core module tests
        script:
          - pytest tests_basic/core
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/core/**"


pipelines:

  custom:
    docker-base-build:
      - step:
          name: Create & Upload Docker base image for BB pipeline
          caches:
            - pip
          script:
            - echo $GCR_JSON_KEY | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
            - docker build . -f Dockerfile-pipeline-image --tag pylinac-pipe-base
            - docker tag pylinac-pipe-base us-central1-docker.pkg.dev/radmachine/pylinac/base-pipe-image
            - docker push us-central1-docker.pkg.dev/radmachine/pylinac/base-pipe-image
          services:
            - docker
    pypi:
      - step:
            name: Set up Env
            caches:
              - pip
            script:
              - apt-get update
              - python -m venv venv
              - source venv/bin/activate
              - pip install -r requirements-dev.txt
            artifacts:
              - venv/**
      - step:
          name: Push to PYPI
          script:
            - source venv/bin/activate
            - pipe: atlassian/pypi-publish:0.3.1
              variables:
                PYPI_USERNAME: $PYPI_USERNAME
                PYPI_PASSWORD: $PYPI_PASSWORD
                DISTRIBUTIONS: 'bdist_wheel'

  pull-requests:
    '**':
      - parallel:
          - step: *cbct-tests
          - step: *acr-tests
          - step: *planar-tests
          - step: *dlg-tests
          - step: *field-analysis-tests
          - step: *machine-log-tests
          - step: *picket-fence-tests
          - step: *starshot-tests
          - step: *calibration-tests
          - step: *vmat-tests
          - step: *winston-lutz-tests
          - step: *core-module-tests

  branches:
    release*:
      - step: *push-to-github
    master:
      - parallel:
          - step: *cbct-tests
          - step: *acr-tests
          - step: *planar-tests
          - step: *dlg-tests
          - step: *field-analysis-tests
          - step: *machine-log-tests
          - step: *picket-fence-tests
          - step: *starshot-tests
          - step: *calibration-tests
          - step: *vmat-tests
          - step: *winston-lutz-tests
          - step: *core-module-tests
      - step: *push-to-github